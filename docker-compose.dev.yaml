services:
  backend:
    image: crm-backend-dev:1.0.0
    build: ./Service/Backend
    env_file:
      - .env
    environment:
      - MODE=Development
      - API_URL=http://127.0.0.1
    volumes:
      - ./Service/Backend/src:/app/src
      - ./Log:/logs
    depends_on:
      - mongo
    restart: always
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}

  mongo:
    image: mongo:7.0.7
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - mongo_dev_data:/data/db
      - mongo_dev_data_config:/data/configdb
      - ./Service/Backend/seed.js:/docker-entrypoint-initdb.d/seed.js
    restart: always

  mongo-express:
    image: mongo-express:1.0.2
    env_file:
      - .env
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    restart: always
    ports:
      - 8081:8081

  frontend:
    image: crm-frontend-dev:1.0.0
    env_file:
      - .env
    build:
      context: ./Service/Frontend
      dockerfile: ./Dockerfile.dev
      args:
        API_URL: http://127.0.0.1:${BACKEND_PORT}
    restart: always
    ports:
      - '8000:8000'
    volumes:
      - ./Service/Frontend/src:/app/src

volumes:
  mongo_dev_data:
  mongo_dev_data_config:
